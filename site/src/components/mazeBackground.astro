---
// This component loads the maze asynchronously to avoid render blocking
---

<div class="relative w-full h-full">
  <!-- Canvas will be added dynamically after page load -->
  <div id="maze-canvas-container"></div>

  <!-- Semi-transparent overlay for better text readability -->
  <div class="fixed inset-0 z-5 pointer-events-none">
    <!-- Single smooth gradient covering entire viewport: stronger centre, gentler transparent edges -->
    <div class="w-full h-full gradient-overlay"></div>
  </div>

  <div class="relative z-10">
    <slot />
  </div>
</div>

<script is:inline>
  // Use requestIdleCallback to load maze when browser is idle
  // Falls back to setTimeout for browsers that don't support it
  function loadMazeWhenIdle() {
    const container = document.getElementById("maze-canvas-container");
    if (container && container.parentElement) {
      // Create canvas element
      const canvas = document.createElement("canvas");
      canvas.id = "mazeCanvas";
      canvas.className = "fixed inset-0 z-0 w-full h-full pointer-events-none";
      canvas.setAttribute("aria-hidden", "true");

      // Insert canvas at the beginning of the container's parent
      container.parentElement.insertBefore(canvas, container);

      // Dynamically load the maze script
      const script = document.createElement("script");
      script.type = "module";
      script.textContent = `
        import initMaze from '/src/scripts/drawHexMaze.js';
        const canvas = document.getElementById('mazeCanvas');
        if (canvas) {
          initMaze(canvas);
        }
      `;
      document.head.appendChild(script);
    }
  }

  // Wait until page is loaded, then use requestIdleCallback for initialization
  window.addEventListener("load", () => {
    if ("requestIdleCallback" in window) {
      // Use requestIdleCallback to run when browser is idle
      requestIdleCallback(loadMazeWhenIdle, { timeout: 2000 });
    } else {
      // Fallback to setTimeout for browsers without requestIdleCallback
      setTimeout(loadMazeWhenIdle, 100);
    }
  });
</script>
