name: Build and Deploy Site

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image_name: ${{ steps.image_name.outputs.name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v19

      - name: Setup Nix cache
        uses: DeterminateSystems/magic-nix-cache-action@v13

      - name: Build flake image (Nix)
        run: |
          nix build -L .#packages.x86_64-linux.docker

      - name: Prepare image artifact
        run: |
          mkdir -p artifact
          cp "$(readlink -f result)" artifact/docker-image.tar

      - name: Define image name
        id: image_name
        run: echo "name=ed-thomas-dev" >> "$GITHUB_OUTPUT"

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: artifact

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: docker-image
          path: artifact

      - name: GitHub Container Registry login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Load image into Docker and push to GHCR
        run: |
          docker load < artifact/docker-image.tar
          docker tag ${{ needs.build.outputs.image_name }}:latest ghcr.io/pixel-87/ed-thomas.dev:latest
          docker push ghcr.io/pixel-87/ed-thomas.dev:latest

          SHORT_SHA=${GITHUB_SHA::8}
          docker tag ${{ needs.build.outputs.image_name }}:latest ghcr.io/pixel-87/ed-thomas.dev:${SHORT_SHA}
          docker push ghcr.io/pixel-87/ed-thomas.dev:${SHORT_SHA}
